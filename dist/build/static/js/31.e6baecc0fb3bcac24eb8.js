webpackJsonp([31],{559:function(e,t,n){n(886);var s=n(32)(n(935),n(840),null,null);e.exports=s.exports},780:function(e,t,n){t=e.exports=n(535)(!1),t.push([e.i,"",""])},840:function(e,t){e.exports={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"sub-page-wrap"},[n("h3",[e._v("MessageBox 弹框")]),e._v(" "),n("p",[e._v("模拟系统的消息提示框而实现的一套模态对话框组件，用于消息提示、确认消息和提交内容")]),e._v(" "),e._m(0),e._v(" "),n("div",{staticClass:"panel panel-default"},[e._m(1),e._v(" "),n("div",{staticClass:"panel-body"},[n("button",{staticClass:"btn btn-link",on:{click:e.openAlert}},[e._v("点击打开Message Box(alert)")]),e._v(" "),e._m(2),e._v(" "),n("pre",[e._v("        this.$alertbox('这是一段内容', '标题名称', {\n          confirmButtonText: '确定',\n          callback: action => {\n            console.log('alert closed')\n          }\n        })\n      ")])])]),e._v(" "),n("div",{staticClass:"panel panel-default"},[e._m(3),e._v(" "),n("div",{staticClass:"panel-body"},[n("button",{staticClass:"btn btn-link",on:{click:e.openConfirm}},[e._v("点击打开Message Box(confirm)")]),e._v(" "),e._m(4),e._v(" "),n("pre",[e._v("        this.$confirm(['删除后数据不可恢复', '确定要删除吗？'], '删除提示').then(() => {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消'\n        }).then(() => {\n          this.$message({\n            type: 'success',\n            message: '删除成功!'\n          })\n          console.log('删除成功!')\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          })\n          console.log('已取消删除')\n        })\n      ")])])]),e._v(" "),n("div",{staticClass:"panel panel-default"},[e._m(5),e._v(" "),n("div",{staticClass:"panel-body"},[n("button",{staticClass:"btn btn-link",on:{click:e.openPrompt}},[e._v("点击打开Message Box(prompt)")]),e._v(" "),e._m(6),e._v(" "),n("pre",[e._v("        this.$prompt('请输入邮箱', '提示', {\n          messageAlign: 'left',\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          inputPattern: /[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?/,\n          inputPlaceholder: '请输入邮箱',\n          inputErrorMessage: '邮箱格式不正确'\n        }).then(({ value }) => {\n          this.$message({\n            type: 'success',\n            message: '你的邮箱是: ' + value\n          })\n          console.log(value)\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '取消输入'\n          })\n          console.log('取消输入')\n        })\n      ")])])]),e._v(" "),n("div",{staticClass:"panel panel-default"},[e._m(7),e._v(" "),n("div",{staticClass:"panel-body"},[n("button",{staticClass:"btn btn-link",on:{click:e.openMsgbox}},[e._v("点击打开Message Box(msgbox)")]),e._v(" "),e._m(8),e._v(" "),n("pre",[e._v("        const h = this.$createElement\n        this.$msgbox({\n          title: '消息',\n          message: h('p', null, [\n            h('span', null, '内容可以是 '),\n            h('i', { style: 'color: teal' }, 'VNode')\n          ]),\n          showCancelButton: true,\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          beforeClose: (action, instance, done) => {\n            if (action === 'confirm') {\n              instance.confirmButtonText = '执行中...'\n              setTimeout(() => {\n                done()\n              }, 3000)\n            } else {\n              done()\n            }\n          }\n        }).then(action => {\n          this.$message({\n            type: 'info',\n            message: 'action: ' + action\n          })\n          console.log('action: ' + action)\n        })\n      ")])])]),e._v(" "),n("div",{staticClass:"panel panel-default"},[e._m(9),e._v(" "),n("div",{staticClass:"panel-body"},[n("button",{staticClass:"btn btn-link",on:{click:e.openAlertWithHtml}},[e._v("点击打开Message Box(html)")]),e._v(" "),e._m(10),e._v(" "),e._m(11)])]),e._v(" "),e._m(12),e._v(" "),e._m(13)])},staticRenderFns:[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"panel panel-default"},[n("div",{staticClass:"panel-body"},[e._v("从场景上说，MessageBox 的作用是美化系统自带的 alert、confirm 和 prompt，因此适合展示较为简单的内容。如果需要弹出较为复杂的内容，请使用 Modal。")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"panel-heading"},[n("h4",{staticClass:"panel-title"},[e._v("消息提示")]),e._v(" "),n("p",[e._v("当用户进行操作时会被触发，该对话框中断用户操作，直到用户确认知晓后才可关闭。")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"panel panel-default"},[n("div",{staticClass:"panel-body"},[e._v("\n          调用$alert方法即可打开消息提示，它模拟了系统的 alert，无法通过按下 ESC 或点击框外关闭。此例中接收了两个参数，message和title。值得一提的是，窗口被关闭后，它默认会返回一个Promise对象便于进行后续操作的处理。若不确定浏览器是否支持Promise，可自行引入第三方 polyfill 或像本例一样使用回调进行后续处理。\n        ")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"panel-heading"},[n("h4",{staticClass:"panel-title"},[e._v("确认消息")]),e._v(" "),n("p",[e._v("提示用户确认其已经触发的动作，并询问是否进行此操作时会用到此对话框。")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"panel"},[n("div",{staticClass:"panel-body"},[e._v('\n          调用$confirm方法即可打开消息提示，它模拟了系统的 confirm。Message Box 组件也拥有极高的定制性，我们可以传入options作为第三个参数，它是一个字面量对象。注意，第一个参数可以是一个String类型，也可以是一个String数组；第二个参数title必须定义为String类型(默认值为"操作确认提示")，如果是Object，会被理解为options。在这里我们用了 Promise 来处理后续响应。\n        ')])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"panel-heading"},[n("h4",{staticClass:"panel-title"},[e._v("提交内容")]),e._v(" "),n("p",[e._v("当用户进行操作时会被触发，中断用户操作，提示用户进行输入的对话框。")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"panel"},[n("div",{staticClass:"panel-body"},[e._v("\n          调用$prompt方法即可打开消息提示，它模拟了系统的 prompt。可以用inputPattern字段自己规定匹配模式，或者用inputValidator规定校验函数，可以返回Boolean或String，返回false或字符串时均表示校验未通过，同时返回的字符串相当于定义了inputErrorMessage字段。此外，可以用inputPlaceholder字段来定义输入框的占位符。\n        ")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"panel-heading"},[n("h4",{staticClass:"panel-title"},[e._v("自定义")]),e._v(" "),n("p",[e._v("可自定义配置不同内容。")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"panel"},[n("div",{staticClass:"panel-body"},[e._v("\n          以上三个方法都是对$msgbox方法的再包装。本例直接调用$msgbox方法，使用了showCancelButton字段，用于显示取消按钮。另外可使用cancelButtonClass为其添加自定义样式，使用cancelButtonText来自定义按钮文本（Confirm 按钮也具有相同的字段，在文末的字段说明中有完整的字段列表）。此例还使用了beforeClose属性，它的值是一个方法，会在 MessageBox 的实例关闭前被调用，同时暂停实例的关闭。它有三个参数：action、实例本身和done方法。使用它能够在关闭前对实例进行一些操作，比如为确定按钮添加loading状态等；此时若需要关闭实例，可以调用done方法（若在beforeClose中没有调用done，则实例不会关闭）。\n        ")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"panel-heading"},[n("h4",{staticClass:"panel-title"},[e._v("使用 HTML 片段")]),e._v(" "),n("p",[e._v("message 属性支持传入 HTML 片段")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"panel"},[n("div",{staticClass:"panel-body"},[e._v("\n          将dangerouslyUseHTMLString属性设置为 true，message 就会被当作 HTML 片段处理。\n        ")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("pre",[e._v("        this.$alertbox('"),n("strong",[e._v("这是 "),n("i",[e._v("HTML")]),e._v(" 片段")]),e._v("', 'HTML 片段', {\n          dangerouslyUseHTMLString: true\n        })\n      ")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"panel panel-default"},[n("div",{staticClass:"panel-heading"},[n("h4",{staticClass:"panel-title"},[e._v("全局方法")]),e._v(" "),n("p",[e._v("现已经全局引入，Vue.prototype 添加如下全局方法：$msgbox, $alertbox, $confirm 和 $prompt。因此在 Vue instance 中可以采用本页面中的方式调用 MessageBox。调用参数为：")])]),e._v(" "),n("div",{staticClass:"panel-body"},[n("ul",[n("li",[e._v("$msgbox(options)")]),e._v(" "),n("li",[e._v("$alertbox(message, title, options) 或 $alertbox(message, options)")]),e._v(" "),n("li",[e._v("$confirm(message, title, options) 或 $confirm(message, options)")]),e._v(" "),n("li",[e._v("$prompt(message, title, options) 或 $prompt(message, options)")])])])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"panel panel-default"},[n("div",{staticClass:"panel-heading"},[n("h4",{staticClass:"panel-title"},[e._v("单独引用")]),e._v(" "),n("p",[e._v("如果单独引入 MessageBox")])]),e._v(" "),n("div",{staticClass:"panel-body"},[n("pre",[e._v("import MessageBox from '@/components/message-box'")]),e._v(" "),n("p",[e._v("那么对应于上述四个全局方法的调用方法依次为：MessageBox, MessageBox.alert, MessageBox.confirm 和 MessageBox.prompt，调用参数与全局方法相同。")])])])}]}},886:function(e,t,n){var s=n(780);"string"==typeof s&&(s=[[e.i,s,""]]),s.locals&&(e.exports=s.locals);n(536)("2986d38c",s,!0)},935:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={data:function(){return{}},methods:{openAlert:function(){this.$alertbox("这是一段内容","标题名称",{confirmButtonText:"确定",callback:function(e){console.log("alert closed")}})},openConfirm:function(){var e=this;this.$confirm(["删除后数据不可恢复","确定要删除吗？"],"删除提示").then(function(){e.$message({type:"success",message:"删除成功!"}),console.log("删除成功!")}).catch(function(){e.$message({type:"info",message:"已取消删除"}),console.log("已取消删除")})},openPrompt:function(){var e=this;this.$prompt("请输入邮箱","提示",{messageAlign:"left",confirmButtonText:"确定",cancelButtonText:"取消",inputPattern:/[\w!#$%&'*+\/=?^_`{|}~-]+(?:\.[\w!#$%&'*+\/=?^_`{|}~-]+)*@(?:[\w](?:[\w-]*[\w])?\.)+[\w](?:[\w-]*[\w])?/,inputPlaceholder:"请输入邮箱",inputErrorMessage:"邮箱格式不正确"}).then(function(t){var n=t.value;e.$message({type:"success",message:"你的邮箱是: "+n}),console.log(n)}).catch(function(){e.$message({type:"info",message:"取消输入"}),console.log("取消输入")})},openMsgbox:function(){var e=this,t=this.$createElement;this.$msgbox({title:"消息",message:t("p",null,[t("span",null,"内容可以是 "),t("i",{style:"color: teal"},"VNode")]),showCancelButton:!0,confirmButtonText:"确定",cancelButtonText:"取消",beforeClose:function(e,t,n){"confirm"===e?(t.confirmButtonText="执行中...",setTimeout(function(){n()},3e3)):n()}}).then(function(t){e.$message({type:"info",message:"action: "+t}),console.log("action: "+t)})},openAlertWithHtml:function(){this.$alertbox("<strong>这是 <i>HTML</i> 片段</strong>","HTML 片段",{dangerouslyUseHTMLString:!0})}}}}});